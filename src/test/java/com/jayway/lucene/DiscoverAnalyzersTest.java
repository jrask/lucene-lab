package com.jayway.lucene;

import static junit.framework.Assert.assertEquals;

import java.io.File;
import java.io.IOException;

import org.apache.lucene.analysis.Analyzer;
import org.apache.lucene.index.CorruptIndexException;
import org.apache.lucene.index.Term;
import org.apache.lucene.queryParser.ParseException;
import org.apache.lucene.search.TermQuery;
import org.apache.lucene.store.LockObtainFailedException;
import org.apache.lucene.store.RAMDirectory;
import org.junit.Ignore;
import org.junit.Test;

import com.jayway.lucene.analysis.AnalyzerUtils;
import com.jayway.lucene.index.IndexStore;
import com.jayway.lucene.index.IndexUtils;

public class DiscoverAnalyzersTest extends AbstractParentTestCase{
	

	
	public void setupIndex(Analyzer analyzer) throws CorruptIndexException, LockObtainFailedException, IOException, InterruptedException {
		debugQueryParser = true;
		index = new IndexStore(new RAMDirectory(),analyzer,analyzer,"body",debugQueryParser);
	}
	
	
	/**
	 * Simply displays the tokens generated by different analyzers so we can discuss
	 * the differences.
	 * 
	 * 
	 */
	@Test
	public void displayAnalyzerTokens() throws IOException {
		AnalyzerUtils.displayTokens("The art of Lucene, by Johan (johan.rask@jayway.com) 2010",
				standard,whitespace,simple,keyword,stop,custom);
	}	
	

	@Test
	//@Ignore
	public void simpleExactTermSearchWorksWithCustomAnalyzer() throws IOException, ParseException, InterruptedException {
		setupIndex(custom);
		addDocument(
				defaultConfiguredField("id", "1"),
				defaultConfiguredField("title", "The art of Adventure racing from wikipedia"),
				defaultConfiguredField("author", "johan.rask@jayway.com"));
		assertEquals(1, index.search(new TermQuery(new Term("id","1"))).length);
		assertEquals(1, index.search(new TermQuery(new Term("author","johan.rask@jayway.com"))).length);	
		assertEquals(0, index.search("title:The art of").length);
		assertEquals(1, index.search("title:\"The art of Adventure racing from wikipedia\"").length);
		assertEquals(0, index.search("title:the art of Adventure racing from wikipedia").length);
		assertEquals(0, index.search("+title:Adventure racing").length);
		
	}
	
	
	@Test
	public void termSearch() throws IOException, ParseException, InterruptedException {
		setupIndex(whitespace);
		addDocument(
				defaultConfiguredField("id", "1"),
				defaultConfiguredField("title", "The art of Adventure racing from wikipedia"),
				defaultConfiguredField("author", "johan.rask@jayway.com"));
		assertEquals(1, index.search("title:The").length);
		assertEquals(0, index.search("title:the").length);
		assertEquals(1, index.search("title:art").length);
	}
	
	@Test
	public void phraseSearches() throws CorruptIndexException, IOException, InterruptedException, ParseException {		
		setupIndex(whitespace);
		addDocument(
				defaultConfiguredField("title", "The art of Adventure racing from wikipedia"),
				IndexUtils.createField("body", new File("src/main/resources/body.txt")));
		assertEquals(1, index.search("body:\"traverse mountainous terrain while carrying\"").length);
		assertEquals(0, index.search("body:\"to Be\"").length);	
		assertEquals(1, index.search("title:the art of Adventure racing from wikipedia").length);
		assertEquals(1, index.search("title:The art of Adventure racing from wikipedia").length);
		assertEquals(0, index.search("title:\"the art of Adventure racing from wikipedia\"").length);
	}
	
	@Test
	@Ignore
	public void defaultFieldSearch() throws IOException, ParseException, InterruptedException {
		setupIndex(whitespace);
		addDocument(
				IndexUtils.createField("body", new File("src/main/resources/body.txt")));
		assertEquals(1, index.search("traverse mountainous terrain while carrying").length);
	}
	
	@Test
	@Ignore
	public void keywordSearch() throws IOException, ParseException, InterruptedException {
		setupIndex(whitespace);
		addDocument(defaultConfiguredField("keys", "JaVa LuCeNe FoOd"));
		assertEquals(1, index.search("keys:JaVa").length);
		assertEquals(0,  index.search("keys:java").length);
	}
	
	@Test
	@Ignore
	public void showStopAnalyzerAndPositionIncrement() throws CorruptIndexException, IOException, InterruptedException, ParseException {
		setupIndex(stop);
		addDocument(defaultConfiguredField("text", "world is an elephant"));

		assertEquals(1, index.search("text:world elephant").length);
		assertEquals(1, index.search("text:\"world is an elephant\"").length);
		assertEquals(0, index.search("text:\"world elephant\"").length);
		assertEquals(0, index.search("text:\"world is big elephant\"").length);
		assertEquals(1, index.search("text:\"world an is elephant\"").length);
		assertEquals(1, index.search("text:\"world the the elephant\"").length);
	}
	
}
